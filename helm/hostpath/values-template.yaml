deploymentMode: SimpleScalable
loki:
  auth_enabled: false
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 4
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
  storage:
    type: alibabacloud
    alibabacloud:
      endpoint: oss-cn-beijing.aliyuncs.com
      region: cn-beijing
      accessKeyId: ""
      secretAccessKey: ""
    bucketNames:
      chunks: venowolf
memcached:
  podSecurityContext:
    runAsNonRoot: false
    fsGroup: 0
    runAsGroup: 0
    runAsUser: 0

resultsCache:
  allocatedMemory: 1024
chunksCache:
  allocatedMemory: 2048

read:
  replicas: 2

write:
  replicas: 3 # To ensure data durability with replication

  # either affinity or nodeselector, affinity is better
  # #affinity
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              loki.component: write
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: loki.component 
            operator: In
            values:
            - write
            - writebackend
  # #nodeSelector
  #nodeSelector:
  #  application/loki.write: true

  # PVC enabled, specify the storageclass and size, even if it is default 
  # The simplest deployment topology, high performance SAN
  # pv(s) must have been created if local storage(name/size/storageClass flowing )
  #persistence:
  #  storageClass: mystorageclass 
  #  size: 2000G

  # hostPath enabled()
  persistence:
    volumeClaimsEnabled: false
    dataVolumehostPath:
      hostPath:
        path: /data/loki/writewwww
        type: DirectoryOrCreate

backend:
  replicas: 2
  # #affinity
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: loki.component
              operator: In
              values:
              - write
              - writebackend
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: loki.component 
            operator: In
            values:
            - write
            - writebackend
  # hostPath enabled()
  persistence:
    volumeClaimsEnabled: false
    dataVolumehostPath:
      hostPath:
        path: /data/loki/backendbbbb
        type: DirectoryOrCreate

    
  # Enable minio for storage
minio:
  enabled: false

gateway:
  service:
    type: NodePort
